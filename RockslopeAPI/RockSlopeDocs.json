{
  "swagger": "2.0",
  "info": {
    "title": "Rock Slope API",
    "description": "A sample API that runs on Azure Functions either 1.x or 2.x using Open API specification.",
    "termsOfService": "https://github.com/aliencube/AzureFunctions.Extensions",
    "contact": {
      "name": "Aliencube Community",
      "url": "https://github.com/aliencube/AzureFunctions.Extensions/issues",
      "email": "no-reply@aliencube.org"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.1.0"
  },
  "host": "localhost:7071",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/files/download/{fileName}": {
      "get": {
        "description": "Download file from its guid",
        "operationId": "FileDownloadHttpTrigger_Get",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": { }
      }
    },
    "/files/{assetId}": {
      "get": {
        "description": "Get all download ids for files associated with an asset",
        "operationId": "GetAssetFiles_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AssetData",
            "schema": {
              "$ref": "#/definitions/assetData"
            }
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "description": "Upload file to storage and return a unique GUID for the file",
        "operationId": "FileUploadHttpTrigger_Post",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of AssetData",
            "schema": {
              "$ref": "#/definitions/assetData"
            }
          }
        }
      }
    },
    "/RockUnits": {
      "post": {
        "description": "Create a Rock Unit within the database",
        "operationId": "CreateRockUnit_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/rockUnit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of RockUnit",
            "schema": {
              "$ref": "#/definitions/rockUnit"
            }
          }
        }
      },
      "get": {
        "description": "Retrieve all Rock Units",
        "operationId": "GetAllRockUnits_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of RockUnit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/rockUnit"
              }
            }
          }
        }
      }
    },
    "/RockUnits/{rockUnitId}": {
      "get": {
        "description": "Retrieve the rock Unit information for a rock Unit Id",
        "operationId": "GetRockUnit_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "rockUnitId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of RockUnit",
            "schema": {
              "$ref": "#/definitions/rockUnit"
            }
          }
        }
      }
    },
    "/RockSlopes": {
      "post": {
        "description": "Create a Rockslope within the database",
        "operationId": "CreateRockSlope_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/rockSlope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of RockSlope",
            "schema": {
              "$ref": "#/definitions/rockSlope"
            }
          }
        }
      },
      "get": {
        "description": "Retrieve all Rockslopes",
        "operationId": "GetAllRockSlopes_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of RockSlope",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/rockSlope"
              }
            }
          }
        }
      }
    },
    "/RockSlopes/{rockSlopeId}": {
      "get": {
        "description": "Retrieve the rock slope information for a rock slope Id",
        "operationId": "GetRockSlope_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "rockSlopeId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of RockSlope",
            "schema": {
              "$ref": "#/definitions/rockSlope"
            }
          }
        }
      }
    },
    "/Projects": {
      "post": {
        "description": "Create a project within the database",
        "operationId": "CreateProject_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Project",
            "schema": {
              "$ref": "#/definitions/project"
            }
          }
        }
      },
      "get": {
        "description": "Retrieve all projects",
        "operationId": "GetAllProjects_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Project",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/project"
              }
            }
          }
        }
      }
    },
    "/Projects/{projectId}": {
      "get": {
        "description": "Retrieve the project information for a project Id",
        "operationId": "GetProject_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Project",
            "schema": {
              "$ref": "#/definitions/project"
            }
          }
        }
      }
    },
    "/Discontinuities": {
      "post": {
        "description": "Create a Discontinuity within the database",
        "operationId": "CreateDiscontinuity_Post",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/discontinuity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Discontinuity",
            "schema": {
              "$ref": "#/definitions/discontinuity"
            }
          }
        }
      },
      "get": {
        "description": "Retrieve all Rock Units",
        "operationId": "GetAllDiscontinuities_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Array of Discontinuity",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/discontinuity"
              }
            }
          }
        }
      }
    },
    "/Discontinuities/{discontinuityId}": {
      "get": {
        "description": "Retrieve the rock Unit information for a rock Unit Id",
        "operationId": "GetDiscontinuity_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "DiscontinuityId",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Payload of Discontinuity",
            "schema": {
              "$ref": "#/definitions/discontinuity"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "assetData": {
      "type": "object",
      "properties": {
        "assetId": {
          "type": "string"
        },
        "associatedItem": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "discontinuity": {
      "type": "object",
      "properties": {
        "discId": {
          "type": "string"
        },
        "rockUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "rockUnit": {
          "$ref": "#/definitions/rockUnit"
        },
        "type": {
          "type": "string"
        },
        "spacing": {
          "type": "string"
        },
        "persistance": {
          "type": "string"
        },
        "termination": {
          "type": "string"
        },
        "roughness": {
          "type": "string"
        },
        "amplitude": {
          "type": "string"
        },
        "waveLength": {
          "type": "string"
        },
        "jrc": {
          "type": "string"
        },
        "aperture": {
          "type": "string"
        },
        "infilling": {
          "type": "string"
        },
        "discontinuityWeathering": {
          "type": "string"
        },
        "wallStrength": {
          "type": "string"
        },
        "seePage": {
          "type": "string"
        },
        "additionalNotes": {
          "type": "string"
        },
        "structureReference": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "project": {
      "type": "object",
      "properties": {
        "projectId": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "siteLocation": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "rockSlope": {
      "type": "object",
      "properties": {
        "rockSlopeId": {
          "type": "string"
        },
        "projectId": {
          "format": "int32",
          "type": "integer"
        },
        "project": {
          "$ref": "#/definitions/project"
        },
        "slopeReference": {
          "type": "string"
        },
        "startChainage": {
          "format": "int32",
          "type": "integer"
        },
        "endChainage": {
          "format": "int32",
          "type": "integer"
        },
        "latitude": {
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "type": "number"
        },
        "elevationToa": {
          "format": "int32",
          "type": "integer"
        },
        "faceHeight": {
          "format": "int32",
          "type": "integer"
        },
        "faceAngle": {
          "format": "int32",
          "type": "integer"
        },
        "faceAzimuth": {
          "format": "int32",
          "type": "integer"
        },
        "length": {
          "format": "int32",
          "type": "integer"
        },
        "vegetation": {
          "format": "int32",
          "type": "integer"
        },
        "benchDetails": {
          "format": "int32",
          "type": "integer"
        },
        "roughnessProfile": {
          "format": "int32",
          "type": "integer"
        },
        "toeDetails": {
          "format": "int32",
          "type": "integer"
        },
        "infrastructureToe": {
          "format": "int32",
          "type": "integer"
        },
        "infrastructureCrest": {
          "format": "int32",
          "type": "integer"
        },
        "upperFace": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "rockUnit": {
      "type": "object",
      "properties": {
        "rockUnitId": {
          "type": "string"
        },
        "rockSlopeId": {
          "format": "int32",
          "type": "integer"
        },
        "rockSlope": {
          "$ref": "#/definitions/rockSlope"
        },
        "structureReference": {
          "type": "string"
        },
        "rockUnitRef": {
          "type": "string"
        },
        "strength": {
          "type": "string"
        },
        "thickness": {
          "type": "string"
        },
        "spacing": {
          "type": "string"
        },
        "term": {
          "type": "string"
        },
        "lightness": {
          "type": "string"
        },
        "chroma": {
          "type": "string"
        },
        "hue": {
          "type": "string"
        },
        "texture": {
          "type": "string"
        },
        "grainSize": {
          "type": "string"
        },
        "rockName": {
          "type": "string"
        },
        "minorConstituents": {
          "type": "string"
        },
        "geologicalFormation": {
          "type": "string"
        },
        "weatheringDescription": {
          "type": "string"
        },
        "additionalNotes": {
          "type": "string"
        },
        "weatherGrades": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "type": "string"
        },
        "updatedAt": {
          "format": "date-time",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "authKey": {
      "type": "apiKey",
      "name": "x-functions-key",
      "in": "header"
    }
  }
}